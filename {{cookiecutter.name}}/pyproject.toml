[project]
name = "{{ cookiecutter.name }}"
authors = [
	{ name = "{{ cookiecutter.author }}", email = "{{ cookiecutter.email }}" },
]
description = "{{ cookiecutter.description }}"
version = "{{ cookiecutter.version }}"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
dependencies = ["typer!=0.15.0"]
keywords = []
classifiers = [
	"Development Status :: 3 - Alpha",
	"Environment :: Console",
	"Intended Audience :: Developers",
	"License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
	"Natural Language :: English",
	"Topic :: Education",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Programming Language :: Python :: 3.14",
]

[project.urls]
Repository = "https://github.com/{{ cookiecutter.author }}/{{ cookiecutter.name }}"
Issues = "https://github.com/{{ cookiecutter.author }}/{{ cookiecutter.name }}/issues"

[project.optional-dependencies]
dev = []

[project.scripts]
bitwarden_merge = "{{ cookiecutter.package_name }}.main:main"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["{{ cookiecutter.package_name }}"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = [
	"CPY001", # Missing copyright notice at top of file
	"D100",   # Missing docstring in public module
	"D203",   # 1 blank line required before class docstring
	"D206",   # Docstring should be indented with spaces, not tabs
	"D212",   # Multi-line docstring summary should start at the first line
	"D413",   # Missing blank line after last section
	"E741",   # Ambiguous variable name: {name}
	"INP001", # File {filename} is part of an implicit namespace package. Add an __init__.py.
	"T201",   # `print` found
	"TD003",  # Missing issue link on the line following this TODO
	"W191",   # Indentation contains tabs
]
unfixable = [
	"B007", # Loop control variable {name} not used within loop body
	"F401", # {name} imported but unused; consider using importlib.util.find_spec to test for availability
	"F841", # Local variable {name} is assigned to but never used
]

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pylint]
allow-magic-value-types = ["str", "bytes", "int"]

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
	"D100",   # Missing docstring in public module
	"INP001", # Use of assert detected
	"S101",   # Use of assert detected
	"SLF001", # Private member accessed
]
"__init__.py" = [
	"F401", # Imported but unused
]
